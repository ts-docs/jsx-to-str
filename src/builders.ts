import * as ts from "typescript";

export function compileSpreadJSXAttribute(exp: ts.Expression, {factory}: ts.TransformationContext) : ts.Expression {
    return factory.createCallExpression(
        factory.createPropertyAccessExpression(
            factory.createCallExpression(
                factory.createPropertyAccessExpression(
                    factory.createIdentifier("Object"),
                    factory.createIdentifier("entries")
                ),
                undefined,
                [exp]
            ),
            factory.createIdentifier("map")
        ),
        undefined,
        [factory.createArrowFunction(
            undefined,
            undefined,
            [factory.createParameterDeclaration(
                undefined,
                undefined,
                undefined,
                factory.createArrayBindingPattern([
                    factory.createBindingElement(
                        undefined,
                        undefined,
                        factory.createIdentifier("key"),
                        undefined
                    ),
                    factory.createBindingElement(
                        undefined,
                        undefined,
                        factory.createIdentifier("val"),
                        undefined
                    )
                ]),
                undefined,
                undefined,
                undefined
            )],
            undefined,
            factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
            factory.createTemplateExpression(
                factory.createTemplateHead(
                    "",
                    ""
                ),
                [
                    factory.createTemplateSpan(
                        factory.createIdentifier("key"),
                        factory.createTemplateMiddle(
                            "=\"",
                            "=\""
                        )
                    ),
                    factory.createTemplateSpan(
                        factory.createIdentifier("val"),
                        factory.createTemplateTail(
                            "\"",
                            "\""
                        )
                    )
                ]
            )
        )]
    );
}